plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

// 빌드 시 aiku 모듈의 JAR 파일 생성 방지
bootJar.enabled = false

// 하위 모듈 설정
subprojects {
	group = 'aiku-backend'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	ext {
		set('springCloudVersion', "2023.0.3")
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.apache.kafka:kafka-streams'
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
		implementation 'org.springframework.kafka:spring-kafka'
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'com.h2database:h2'
		implementation 'mysql:mysql-connector-java:8.0.33'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.kafka:spring-kafka-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		// Mockito
		testImplementation 'org.mockito:mockito-core'

		// QueryDsl
		implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
		annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"

		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

	clean {
		delete file('src/main/generated')
	}
}
