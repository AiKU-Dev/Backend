spring:
  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none #주의 사용에 따라 create, update 사용 후 none으로 변경해주세요
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        default_batch_fetch_size: 100
#        show_sql: true   # 하이버네이트 기본 SQL 출력 옵션
#        format_sql: true # 하이버네이트 기본 SQL 포맷팅 옵션
  kafka:
    bootstrap-servers: ${KAFKA_SERVER_URL}
    consumer:
      auto-offset-reset: latest
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      enable-idempotence: true
      acks: 1
      max-in-flight-requests-per-connection: 1
      retries: 3
      linger-ms: 1
      batch-size: 16384
      buffer-memory: 1048576
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

google:
  config:
    type: ${GOOGLE_TYPE}
    project-id: ${GOOGLE_PROJECT_ID}
    private-key-id: ${GOOGLE_KEY_ID}
    private-key: ${GOOGLE_KEY}
    client-email: ${GOOGLE_EMAIL}
    client-id: ${GOOGLE_CLIENT_ID}
    auth-uri: ${GOOGLE_AUTH_URI}
    token-uri: ${GOOGLE_TOKEN_URI}
    auth-provider-x509-cert-url: ${GOOGLE_AUTH_PROVIDER}
    client-x509-cert-url: ${GOOGLE_CERT_URL}
    universe-domain: ${GOOGLE_UNIVERSE_DOMAIN}

logging:
  level:
    root: INFO
  file:
    name: /spring-log/application.log
